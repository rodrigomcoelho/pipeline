name: Deploy Plugin Changes to Composer
on:
  push:
    branches:
      - main
      - dev
    paths:
      - plugins/fisia/**
  pull_request:
    branches:
      - main
      - dev
    paths:
      - plugins/fisia/**
jobs:
  deploy:
    name: Upload DAG files to Airflow
    runs-on: ubuntu-latest
    environment: dev
    env:
      EXTENSIONS: \.py
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      BUCKET_PATH: ${{ secrets.DEV_AIRFLOW_BUCKET }}/

    steps:
      # copying files to machine
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # check file changes
      - name: Check file changes
        id: changed-files
        run: |
          ALL_CHANGED_FILES=$(git diff @~..@ --name-only --no-renames | sort | grep '${{ env.EXTENSIONS }}' | sed -e ':a; N; $!ba; s/\n/ /g')

          if [ -z $ALL_CHANGED_FILES]
          then
            echo "No file changes."
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "ANY_CHANGE=true" >> $GITHUB_OUTPUT
          echo "MODIFIED_FILES=$(git diff @~..@ --name-only --no-renames --diff-filter=ACM | sort | grep '${{ env.EXTENSIONS }}'| sed -e ':a; N; $!ba; s/\n/ /g')" >> $GITHUB_OUTPUT
          echo "DELETED_FILES=$(git diff @~..@ --name-only --no-renames --diff-filter=RD | sort | grep '${{ env.EXTENSIONS }}'| sed -e ':a; N; $!ba; s/\n/ /g')" >> $GITHUB_OUTPUT


      # listing changed files
      - name: List all changed files
        if: steps.changed-files.outputs.ANY_CHANGE == 'true'
        run: |
          for file in ${{ steps.changed-files.outputs.DELETED_FILES }}; do
            echo "$file has been deleted."
          done
          for file in ${{ steps.changed-files.outputs.MODIFIED_FILES }}; do
            echo "$file has been either added or modified."
          done

      # submit argo job for deploying
      - name: Applying changes to composer
        if: steps.changed-files.outputs.ANY_CHANGE == 'true'
        run: |

          echo '
          argo submit -n argo -w deploy/deploy-data-gcp.yml \
            --parameter "file_changed=${{ steps.changed-files.outputs.MODIFIED_FILES }}" \
            --parameter "file_deleted=${{ steps.changed-files.outputs.DELETED_FILES }}" \
            --parameter "bucket_path=${{ env.BUCKET_PATH }}" \
            --parameter "branch=${{ env.BRANCH_NAME }}"
          '
